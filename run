#!/bin/bash

export NODE_NO_WARNINGS=1

run_node() {
    while true
    do
        cd /app/sollar
        forever start --no-warnings ../main.js --config=../config.json > /dev/null
        echo "Node is working.."
        sleep $(( 60 ))
        echo "WSS watch dog is working.."
        wscat -c "ws://127.0.0.1:$(jq .p2pPort /app/config.json)"
        forever stop --no-warnings ../main.js --config=../config.json > /dev/null
        pkill 'node'
        sleep $(( 10 ))
        echo "Something wrong. Node is restarting."
    done
}

force_update() {
    if [ -d "/app/sollar/runtime/blocks" ]
    then
	    echo "Node data exists."
    else
    	echo "Node data doesn't exist. Copying node.."
        cd /app/sollar/runtime
    	wget --recursive --no-parent https://testnet.sollar.tech/download/blocks/ > /dev/null
	    mv /app/sollar/runtime/testnet.sollar.tech/download/blocks/ /app/sollar/runtime/blocks
	    rm -rf /app/sollar/runtime/testnet.sollar.tech
    fi
}

logo() {
    echo ""
    echo "                                   ...........                                   "
    echo "                         ...............................                         "
    echo "                    .........................................                    "
    echo "                 ................................................                "
    echo "              ......................................................             "
    echo "           ...........................................................           "
    echo "         ...............................................................         "
    echo "       ...................................................................       "
    echo "      ......................................................................     "
    echo "    ................................................      ...................    "
    echo "   ..........................................             ....................   "
    echo "  ........................................                .....................  "
    echo " .......................................                  ...................... "
    echo " ......................................             ............................ "
    echo " ....................................            ............................... "
    echo " ...................................            ................................ "
    echo " ..................................           .................................. "
    echo " .................................           ................................... "
    echo " ...............................            .................................... "
    echo " ...........................              ...................................... "
    echo " ......................                  ....................................... "
    echo "  .....................                ........................................  "
    echo "   ....................             ..........................................   "
    echo "    ........................,................................................    "
    echo "      ......................................................................     "
    echo "       ...................................................................       "
    echo "         ...............................................................         "
    echo "           ...........................................................           "
    echo "              .....................................................              "
    echo "                 ...............................................                 "
    echo "                     .......................................                     "
    echo "                          .............................                          "
    echo "                                   ...........                                   "
    echo "                                                                                 "
    echo "                               SOLLAR NODE v$(jq .version /app/config.json)  "
    echo ""
    echo ""
}

force_update
logo
run_node
